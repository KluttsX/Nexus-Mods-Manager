<Application x:Class="Nexus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Nexus"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#171B2D" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#282F4E" />
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FFACACAC" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="flatbutton" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="enter">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="leave">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.7" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Opacity="0.7" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="False">
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="leave_BeginStoryboard" Storyboard="{StaticResource leave}" />
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enter}" />
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="searchbutton" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleButton1" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="Storyboard1">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5" />
                                    </DoubleAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#282F4E" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#171B2D" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0025" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="menubutton" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="Storyboard1">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#2A3254" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#2A3254" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="8" Background="#2A3254" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="#2A3254" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="rdbutton" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid Panel.ZIndex="5"  Name="templateRoot" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#00FFFFFF" SnapsToDevicePixels="True">
                            <Border x:Name="pane" Panel.ZIndex="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="1" Width="30" Height="30" CornerRadius="8">

                            </Border>
                            <Border Panel.ZIndex="5"  Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed">
                                <Grid Panel.ZIndex="5"  Name="markGrid" Margin="2">
                                    <Ellipse Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0" Fill="{StaticResource RadioButton.Static.Glyph}" />
                                </Grid>
                            </Border>

                            <ContentPresenter Panel.ZIndex="5" Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="0,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleButton5" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="Storyboard1">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5" />
                                    </DoubleAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#3B56E1" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#2A3254" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleButton2" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="Storyboard1">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#2A3254" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5" />
                                    </DoubleAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#2A3254" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#171B2D" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#171B2D" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0025" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleButton3" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template" Value="{DynamicResource scrollviewer}" />
        </Style>
        <ControlTemplate x:Key="scrollviewer" TargetType="{x:Type ScrollViewer}">
            <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Rectangle Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
                <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Style="{DynamicResource scrollbar}" Margin="0,0,3.334,0" HorizontalAlignment="Right" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" BorderBrush="{x:Null}" />
                <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" BorderBrush="{x:Null}" />
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0" />
        <SolidColorBrush x:Key="BackgroundColorKey" Color="Red"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Name="rectangle" RadiusX="3" RadiusY="3" Fill="#2A3254" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="True" Width="{TemplateBinding FrameworkElement.Width}" Margin="11.5,0,0,-0.003" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="rectangle" Property="Shape.Fill" Value="#3D4877" />
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter TargetName="rectangle" Property="Shape.Fill" Value="#3D4877" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Name="rectangle" Fill="#FF233039" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="True" Width="{TemplateBinding FrameworkElement.Width}" Margin="0,5.167,0,5.667" RadiusY="1.333" RadiusX="1.333" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="rectangle" Property="Shape.Fill" Value="#FF31434F" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="#00FFFFFF" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="border" BorderThickness="1" SnapsToDevicePixels="True" Background="{x:Null}">
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1,0" />
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid Name="Bg" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Row="1" />
                            <RepeatButton Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Visibility="Visible" Margin="5.375,0,-5.375,0" Style="{StaticResource ScrollBarButton}" Background="{x:Null}">
                                <Path Name="ArrowTop" Data="M0,4 C0,4 7,4 7,4 C7,4 3.5,0.5 3.5,0.5 C3.5,0.5 0,4 0,4" Fill="#FF3F5463" Margin="0" Stretch="Uniform" Height="3.5" Width="7" />
                            </RepeatButton>
                            <Track Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2" Visibility="Visible" Margin="5.375,0,-5.375,0" Style="{StaticResource ScrollBarButton}">
                                <Path Name="ArrowBottom" Data="M0,2.5 C0,2.5 7,2.5 7,2.5 C7,2.5 3.5,6 3.5,6 C3.5,6 0,2.5 0,2.5" Fill="#FF3F5463" Margin="0" Stretch="Uniform" Height="3.5" Width="7" />
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                    <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                    <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                    <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                    <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="BorderThickness" Value="0,1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="1" />
                                    <RepeatButton Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path Name="ArrowLeft" Data="M3.18,7 C3.18,7 3.18,0 3.18,0 C3.18,0 0,3.5 0,3.5 C0,3.5 3.18,7 3.18,7" Fill="#FF3F5463" Margin="0" Stretch="Uniform" Height="7" Width="3.18" />
                                    </RepeatButton>
                                    <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path Name="ArrowRight" Data="M1.81,7 C1.81,7 1.81,0 1.81,0 C1.81,0 5,3.5 5,3.5 C5,3.5 1.81,7 1.81,7" Fill="#FF3F5463" Margin="0" Stretch="Uniform" Height="7" Width="3.19" />
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                            <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                            <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                            <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                            <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                        <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="switch" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="check">
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                        <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-20,0,0,0">
                                            <EasingThicknessKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingThicknessKeyFrame.EasingFunction>
                                        </EasingThicknessKeyFrame>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="uncheck">
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                        <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="-30,0,0,0">
                                            <EasingThicknessKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingThicknessKeyFrame.EasingFunction>
                                        </EasingThicknessKeyFrame>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                            <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
                            <Border Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed">
                                <Grid Name="markGrid" Margin="2">
                                    <Ellipse Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0" Fill="{StaticResource RadioButton.Static.Glyph}" />
                                </Grid>
                            </Border>
                            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Border Name="path" Background="#3B56E1" CornerRadius="1" Height="22" Width="3.127" Margin="-30,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#3B56E1" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" Storyboard.TargetProperty="Foreground.Color" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource check}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FFFFFFFF" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" Storyboard.TargetProperty="Foreground.Color" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard Name="uncheck_BeginStoryboard" Storyboard="{StaticResource uncheck}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="deletebutton" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#232533" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="Storyboard1">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#F96383" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5" />
                                    </DoubleAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#F96383" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#F96383" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#2A3254" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="press">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.849">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.875">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.25">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="release">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.988">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseInOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ResourceDictionary>
                        </FrameworkTemplate.Resources>
                        <Border Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Name="press_BeginStoryboard" Storyboard="{StaticResource press}" />
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="release_BeginStoryboard" Storyboard="{StaticResource release}" />
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                                </TriggerBase.ExitActions>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="toggle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Grid >
                                <Border Name="bor1" Width="40" Height="25" Background="Transparent" BorderBrush="#3D4877" Opacity="0.5" BorderThickness="1.5" CornerRadius="8" Margin="5,0"></Border>
                                <Border x:Name="button" Margin="10 0 0 0" Height="13" Width="13" CornerRadius="4" HorizontalAlignment="Left" ></Border>
                            </Grid>
                            <ContentPresenter x:Name="content" Margin="10,0,0,0" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="right">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.6" From="8 0  0 0" To="27,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard x:Key="left">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.6" From="28,0,0,0" To="10 0 0 0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#3D4877"></Setter>
                                <Setter TargetName="button" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="bor1" Property="BorderBrush" Value="#3D4877"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#3B56E1"></Setter>
                                <Setter TargetName="bor1" Property="BorderBrush" Value="#3B56E1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="8"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"/>

                            <Path
                            x:Name="Arrow"
                            Grid.Column="1"    
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>
        <Style x:Key="theComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#3D4877" />
            <Setter Property="Background" Value="#2A3254" />
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                            Cursor="Hand"
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>

                            <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                                <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                    CornerRadius="8"
                                    x:Name="DropDownBorder"
                                    Background="#2A3254"
                                    Margin="0 5 0 0"
                                    BorderThickness="1"
                                    BorderBrush="#3D4877"/>
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden" Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style  TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                        Name="Border"
                        Padding="5"
                        Margin="2"
                        BorderThickness="2,0,0,0"
                        CornerRadius="0 5 5 0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                            <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3B56E1"/>
                                <Setter TargetName="Border" Property="Background" Value="#171B2D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HoverButton2" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" Margin="5,0" Width="45" Opacity="0.5" Height="30" CornerRadius="8" BorderBrush="#3D4877" BorderThickness="1.5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#2A3254" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#171B2D" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" Storyboard.TargetProperty="Background.Color" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
